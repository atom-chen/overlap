--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Panel_2
local Panel_2 = ccui.Layout:create()
Panel_2:ignoreContentAdaptWithSize(false)
Panel_2:setClippingEnabled(false)
Panel_2:setBackGroundColorType(1)
Panel_2:setBackGroundColor({r = 150, g = 200, b = 255})
Panel_2:setBackGroundColorOpacity(0)
Panel_2:setLayoutComponentEnabled(true)
Panel_2:setName("Panel_2")
Panel_2:setTag(102)
Panel_2:setCascadeColorEnabled(true)
Panel_2:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_2)
layout:setSize({width = 203.0000, height = 193.0000})
layout:setRightMargin(-203.0000)
layout:setTopMargin(-193.0000)
Node:addChild(Panel_2)

--Create Sprite_1
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-game.plist")
local Sprite_1 = cc.Sprite:createWithSpriteFrameName("sp-collection-back.png")
Sprite_1:setName("Sprite_1")
Sprite_1:setTag(3)
Sprite_1:setCascadeColorEnabled(true)
Sprite_1:setCascadeOpacityEnabled(true)
Sprite_1:setPosition(87.7241, 134.8678)
layout = ccui.LayoutComponent:bindLayoutComponent(Sprite_1)
layout:setPositionPercentX(0.4321)
layout:setPositionPercentY(0.6988)
layout:setPercentWidth(0.8473)
layout:setPercentHeight(0.5751)
layout:setSize({width = 172.0000, height = 111.0000})
layout:setLeftMargin(1.7241)
layout:setRightMargin(29.2759)
layout:setTopMargin(2.6322)
layout:setBottomMargin(79.3678)
Sprite_1:setBlendFunc({src = 1, dst = 771})
Panel_2:addChild(Sprite_1)

--Create collect
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-game.plist")
local collect = cc.Sprite:createWithSpriteFrameName("collection-1.png")
collect:setName("collect")
collect:setTag(7)
collect:setCascadeColorEnabled(true)
collect:setCascadeOpacityEnabled(true)
collect:setPosition(86.7261, 136.8677)
layout = ccui.LayoutComponent:bindLayoutComponent(collect)
layout:setPositionPercentX(0.4272)
layout:setPositionPercentY(0.7092)
layout:setPercentWidth(0.2759)
layout:setPercentHeight(0.3782)
layout:setSize({width = 56.0000, height = 73.0000})
layout:setLeftMargin(58.7261)
layout:setRightMargin(88.2739)
layout:setTopMargin(19.6323)
layout:setBottomMargin(100.3677)
collect:setBlendFunc({src = 1, dst = 771})
Panel_2:addChild(collect)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(10)
result['animation']:setTimeSpeed(1.0000)

--Create CColorTimeline
local CColorTimeline = ccs.Timeline:create()

localFrame = ccs.ColorFrame:create()
localFrame:setFrameIndex(10)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setColor({r = 255, g = 255, b = 255})
CColorTimeline:addFrame(localFrame)

result['animation']:addTimeline(CColorTimeline)
CColorTimeline:setNode(Panel_2)
--Create Animation List

result['root'] = Node
return result;
end

return Result

