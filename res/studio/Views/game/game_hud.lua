--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 750.0000, height = 1334.0000})

--Create countdown
local countdown = ccui.Text:create()
countdown:ignoreContentAdaptWithSize(true)
countdown:setTextAreaSize({width = 0, height = 0})
countdown:setFontName("Resource/fonts/OverlapExt.ttf")
countdown:setFontSize(60)
countdown:setString([[0]])
countdown:enableOutline({r = 255, g = 255, b = 255, a = 255}, 2)
countdown:setLayoutComponentEnabled(true)
countdown:setName("countdown")
countdown:setTag(280)
countdown:setCascadeColorEnabled(true)
countdown:setCascadeOpacityEnabled(true)
countdown:setAnchorPoint(0.0000, 0.5000)
countdown:setPosition(70.5111, 1280.2520)
countdown:setTextColor({r = 118, g = 115, b = 113})
layout = ccui.LayoutComponent:bindLayoutComponent(countdown)
layout:setPositionPercentX(0.0940)
layout:setPositionPercentY(0.9597)
layout:setPercentWidth(0.0413)
layout:setPercentHeight(0.0555)
layout:setSize({width = 31.0000, height = 74.0000})
layout:setLeftMargin(70.5111)
layout:setRightMargin(648.4889)
layout:setTopMargin(16.7483)
layout:setBottomMargin(1243.2520)
Layer:addChild(countdown)

--Create score
local score = ccui.Text:create()
score:ignoreContentAdaptWithSize(true)
score:setTextAreaSize({width = 0, height = 0})
score:setFontName("Resource/fonts/Overlap.ttf")
score:setFontSize(60)
score:setString([[0]])
score:setLayoutComponentEnabled(true)
score:setName("score")
score:setTag(39)
score:setCascadeColorEnabled(true)
score:setCascadeOpacityEnabled(true)
score:setPosition(614.2344, 1281.4950)
layout = ccui.LayoutComponent:bindLayoutComponent(score)
layout:setPositionPercentX(0.8190)
layout:setPositionPercentY(0.9606)
layout:setPercentWidth(0.0307)
layout:setPercentHeight(0.0525)
layout:setSize({width = 23.0000, height = 70.0000})
layout:setLeftMargin(602.7344)
layout:setRightMargin(124.2656)
layout:setTopMargin(17.5045)
layout:setBottomMargin(1246.4950)
Layer:addChild(score)

--Create btn_pause
local btn_pause = ccui.Button:create()
btn_pause:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-game.plist")
btn_pause:loadTextureNormal("btn-game-pause.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-game.plist")
btn_pause:loadTexturePressed("btn-game-pause.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-game.plist")
btn_pause:loadTextureDisabled("btn-game-pause.png",1)
btn_pause:setTitleFontSize(14)
btn_pause:setTitleColor({r = 65, g = 65, b = 70})
btn_pause:setScale9Enabled(true)
btn_pause:setCapInsets({x = 15, y = 11, width = 12, height = 25})
btn_pause:setLayoutComponentEnabled(true)
btn_pause:setName("btn_pause")
btn_pause:setTag(43)
btn_pause:setCascadeColorEnabled(true)
btn_pause:setCascadeOpacityEnabled(true)
btn_pause:setPosition(705.6788, 1287.1240)
if callBackProvider~=nil then
      btn_pause:addClickEventListener(callBackProvider("game_hud.lua", btn_pause, "onClick"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(btn_pause)
layout:setPositionPercentX(0.9409)
layout:setPositionPercentY(0.9649)
layout:setPercentWidth(0.0560)
layout:setPercentHeight(0.0352)
layout:setSize({width = 42.0000, height = 47.0000})
layout:setLeftMargin(684.6788)
layout:setRightMargin(23.3212)
layout:setTopMargin(23.3759)
layout:setBottomMargin(1263.6240)
Layer:addChild(btn_pause)

--Create panel_skill
local panel_skill = ccui.Layout:create()
panel_skill:ignoreContentAdaptWithSize(false)
panel_skill:setClippingEnabled(false)
panel_skill:setBackGroundColorType(1)
panel_skill:setBackGroundColor({r = 150, g = 200, b = 255})
panel_skill:setBackGroundColorOpacity(0)
panel_skill:setLayoutComponentEnabled(true)
panel_skill:setName("panel_skill")
panel_skill:setTag(117)
panel_skill:setCascadeColorEnabled(true)
panel_skill:setCascadeOpacityEnabled(true)
panel_skill:setAnchorPoint(0.5000, 0.0000)
panel_skill:setPosition(375.0000, 497.1239)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_skill)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.3727)
layout:setPercentWidth(0.4000)
layout:setPercentHeight(0.0600)
layout:setSize({width = 300.0000, height = 80.0000})
layout:setLeftMargin(225.0000)
layout:setRightMargin(225.0000)
layout:setTopMargin(756.8761)
layout:setBottomMargin(497.1239)
Layer:addChild(panel_skill)

--Create Panel_2
local Panel_2 = ccui.Layout:create()
Panel_2:ignoreContentAdaptWithSize(false)
Panel_2:setClippingEnabled(false)
Panel_2:setBackGroundColorType(1)
Panel_2:setBackGroundColor({r = 150, g = 200, b = 255})
Panel_2:setBackGroundColorOpacity(0)
Panel_2:setLayoutComponentEnabled(true)
Panel_2:setName("Panel_2")
Panel_2:setTag(110)
Panel_2:setCascadeColorEnabled(true)
Panel_2:setCascadeOpacityEnabled(true)
Panel_2:setAnchorPoint(0.5000, 0.0000)
Panel_2:setPosition(375.0000, 1234.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_2)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.9250)
layout:setPercentWidth(0.5067)
layout:setPercentHeight(0.0750)
layout:setSize({width = 380.0000, height = 100.0000})
layout:setVerticalEdge(2)
layout:setLeftMargin(185.0000)
layout:setRightMargin(185.0000)
layout:setBottomMargin(1234.0000)
Layer:addChild(Panel_2)

--Create star1
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-home.plist")
local star1 = cc.Sprite:createWithSpriteFrameName("icon-main-stars.png")
star1:setName("star1")
star1:setTag(111)
star1:setCascadeColorEnabled(true)
star1:setCascadeOpacityEnabled(true)
star1:setPosition(95.0000, 54.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(star1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.2500)
layout:setPositionPercentY(0.5400)
layout:setPercentWidth(0.1158)
layout:setPercentHeight(0.4400)
layout:setSize({width = 44.0000, height = 44.0000})
layout:setVerticalEdge(2)
layout:setLeftMargin(73.0000)
layout:setRightMargin(263.0000)
layout:setTopMargin(24.0000)
layout:setBottomMargin(32.0000)
star1:setBlendFunc({src = 1, dst = 771})
Panel_2:addChild(star1)

--Create star2
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-home.plist")
local star2 = cc.Sprite:createWithSpriteFrameName("icon-main-stars.png")
star2:setName("star2")
star2:setTag(112)
star2:setCascadeColorEnabled(true)
star2:setCascadeOpacityEnabled(true)
star2:setPosition(190.0000, 54.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(star2)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5400)
layout:setPercentWidth(0.1158)
layout:setPercentHeight(0.4400)
layout:setSize({width = 44.0000, height = 44.0000})
layout:setVerticalEdge(2)
layout:setLeftMargin(168.0000)
layout:setRightMargin(168.0000)
layout:setTopMargin(24.0000)
layout:setBottomMargin(32.0000)
star2:setBlendFunc({src = 1, dst = 771})
Panel_2:addChild(star2)

--Create star3
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-home.plist")
local star3 = cc.Sprite:createWithSpriteFrameName("icon-main-stars.png")
star3:setName("star3")
star3:setTag(113)
star3:setCascadeColorEnabled(true)
star3:setCascadeOpacityEnabled(true)
star3:setPosition(285.0000, 54.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(star3)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.7500)
layout:setPositionPercentY(0.5400)
layout:setPercentWidth(0.1158)
layout:setPercentHeight(0.4400)
layout:setSize({width = 44.0000, height = 44.0000})
layout:setVerticalEdge(2)
layout:setLeftMargin(263.0000)
layout:setRightMargin(73.0000)
layout:setTopMargin(24.0000)
layout:setBottomMargin(32.0000)
star3:setBlendFunc({src = 1, dst = 771})
Panel_2:addChild(star3)

--Create Panel_1
local Panel_1 = ccui.Layout:create()
Panel_1:ignoreContentAdaptWithSize(false)
Panel_1:setClippingEnabled(false)
Panel_1:setBackGroundColorType(1)
Panel_1:setBackGroundColor({r = 150, g = 200, b = 255})
Panel_1:setBackGroundColorOpacity(0)
Panel_1:setLayoutComponentEnabled(true)
Panel_1:setName("Panel_1")
Panel_1:setTag(162)
Panel_1:setCascadeColorEnabled(true)
Panel_1:setCascadeOpacityEnabled(true)
Panel_1:setAnchorPoint(0.5000, 0.0000)
Panel_1:setPosition(375.0000, 1.7981)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.0013)
layout:setPercentWidth(0.2667)
layout:setPercentHeight(0.1499)
layout:setSize({width = 200.0000, height = 200.0000})
layout:setLeftMargin(275.0000)
layout:setRightMargin(275.0000)
layout:setTopMargin(1132.2020)
layout:setBottomMargin(1.7981)
Layer:addChild(Panel_1)

--Create LO_TIP_2
local LO_TIP_2 = ccui.Text:create()
LO_TIP_2:ignoreContentAdaptWithSize(true)
LO_TIP_2:setTextAreaSize({width = 0, height = 0})
LO_TIP_2:setFontName("Resource/fonts/Overlap.ttf")
LO_TIP_2:setFontSize(36)
LO_TIP_2:setString([[TAP THE SHAPES IN SEQUENCE, FROM BOTTOM TO TOP]])
LO_TIP_2:setLayoutComponentEnabled(true)
LO_TIP_2:setName("LO_TIP_2")
LO_TIP_2:setTag(161)
LO_TIP_2:setCascadeColorEnabled(true)
LO_TIP_2:setCascadeOpacityEnabled(true)
LO_TIP_2:setPosition(100.0000, 57.6240)
LO_TIP_2:setTextColor({r = 118, g = 115, b = 113})
layout = ccui.LayoutComponent:bindLayoutComponent(LO_TIP_2)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.2881)
layout:setPercentWidth(2.9350)
layout:setPercentHeight(0.2100)
layout:setSize({width = 587.0000, height = 42.0000})
layout:setLeftMargin(-193.5000)
layout:setRightMargin(-193.5000)
layout:setTopMargin(121.3760)
layout:setBottomMargin(36.6240)
Panel_1:addChild(LO_TIP_2)

--Create LO_TIP_1
local LO_TIP_1 = ccui.Text:create()
LO_TIP_1:ignoreContentAdaptWithSize(true)
LO_TIP_1:setTextAreaSize({width = 0, height = 0})
LO_TIP_1:setFontName("")
LO_TIP_1:setFontSize(24)
LO_TIP_1:setString([[TAP THE SHAPES IN SEQUENCE, FROM BOTTOM TO TOP]])
LO_TIP_1:setLayoutComponentEnabled(true)
LO_TIP_1:setName("LO_TIP_1")
LO_TIP_1:setTag(163)
LO_TIP_1:setCascadeColorEnabled(true)
LO_TIP_1:setCascadeOpacityEnabled(true)
LO_TIP_1:setVisible(false)
LO_TIP_1:setPosition(110.9311, 57.8497)
LO_TIP_1:setTextColor({r = 118, g = 115, b = 113})
layout = ccui.LayoutComponent:bindLayoutComponent(LO_TIP_1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5547)
layout:setPositionPercentY(0.2892)
layout:setPercentWidth(3.3100)
layout:setPercentHeight(0.1400)
layout:setSize({width = 662.0000, height = 28.0000})
layout:setLeftMargin(-220.0689)
layout:setRightMargin(-241.9311)
layout:setTopMargin(128.1503)
layout:setBottomMargin(43.8497)
Panel_1:addChild(LO_TIP_1)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

