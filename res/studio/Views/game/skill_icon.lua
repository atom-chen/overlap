--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create p_skill
local p_skill = ccui.Layout:create()
p_skill:ignoreContentAdaptWithSize(false)
p_skill:setClippingEnabled(false)
p_skill:setBackGroundColorType(1)
p_skill:setBackGroundColor({r = 150, g = 200, b = 255})
p_skill:setBackGroundColorOpacity(0)
p_skill:setLayoutComponentEnabled(true)
p_skill:setName("p_skill")
p_skill:setTag(56)
p_skill:setCascadeColorEnabled(true)
p_skill:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(p_skill)
layout:setSize({width = 70.0000, height = 70.0000})
layout:setRightMargin(-70.0000)
layout:setTopMargin(-70.0000)
Node:addChild(p_skill)

--Create btn_skill
local btn_skill = ccui.Button:create()
btn_skill:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-common.plist")
btn_skill:loadTextureNormal("icon-common-skill-1.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-common.plist")
btn_skill:loadTexturePressed("icon-common-skill-1.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/ui-common.plist")
btn_skill:loadTextureDisabled("icon-common-skill-1.png",1)
btn_skill:setTitleFontSize(14)
btn_skill:setTitleColor({r = 65, g = 65, b = 70})
btn_skill:setScale9Enabled(true)
btn_skill:setCapInsets({x = 15, y = 11, width = 40, height = 48})
btn_skill:setLayoutComponentEnabled(true)
btn_skill:setName("btn_skill")
btn_skill:setTag(57)
btn_skill:setCascadeColorEnabled(true)
btn_skill:setCascadeOpacityEnabled(true)
btn_skill:setPosition(35.0002, 35.0001)
if callBackProvider~=nil then
      btn_skill:addTouchEventListener(callBackProvider("skill_icon.lua", btn_skill, "onTouch"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(btn_skill)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 70.0000, height = 70.0000})
layout:setLeftMargin(0.0002)
layout:setRightMargin(-0.0002)
layout:setTopMargin(-0.0001)
layout:setBottomMargin(0.0001)
p_skill:addChild(btn_skill)

--Create info
local info = ccui.Text:create()
info:ignoreContentAdaptWithSize(true)
info:setTextAreaSize({width = 0, height = 0})
info:setFontSize(20)
info:setString([[jienng]])
info:setLayoutComponentEnabled(true)
info:setName("info")
info:setTag(58)
info:setCascadeColorEnabled(true)
info:setCascadeOpacityEnabled(true)
info:setVisible(false)
info:setPosition(38.5248, 82.6941)
layout = ccui.LayoutComponent:bindLayoutComponent(info)
layout:setPositionPercentX(0.5504)
layout:setPositionPercentY(1.1813)
layout:setPercentWidth(0.7714)
layout:setPercentHeight(0.3286)
layout:setSize({width = 54.0000, height = 23.0000})
layout:setLeftMargin(11.5248)
layout:setRightMargin(4.4752)
layout:setTopMargin(-24.1941)
layout:setBottomMargin(71.1941)
p_skill:addChild(info)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

